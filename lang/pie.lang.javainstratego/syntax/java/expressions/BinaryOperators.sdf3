module java/expressions/BinaryOperators

// 15.17. Multiplicative Operators
// 15.18. Additive Operators
// 15.19. Shift Operators
// 15.20. Relational Operators
// 15.21. Equality Operators
// 15.22. Bitwise and Logical Operators
// 15.23. Conditional-And Operator &&
// 15.24. Conditional-Or Operator ||

imports
  java/types/ReferenceTypes

context-free syntax
  
  Expression.Mul = <<Expression> * <Expression>> {left}
  Expression.Div = <<Expression> / <Expression>> {left}
  Expression.Mod = <<Expression> % <Expression>> {left}
  
  Expression.Add = <<Expression> + <Expression>> {left}
  Expression.Sub = <<Expression> - <Expression>> {left}
  
  Expression.LeftShift = [[Expression] << [Expression]] {left}
  Expression.RightShift = [[Expression] >> [Expression]] {left}
  Expression.URightShift = [[Expression] >>> [Expression]] {left}
  
  Expression.Lt   = [[Expression] < [Expression]] {left}
  Expression.Gt   = [[Expression] > [Expression]] {left}
  Expression.LtEq = [[Expression] <= [Expression]] {left}
  Expression.GtEq = [[Expression] >= [Expression]] {left}
  Expression.InstanceOf = <<Expression> instanceof <ReferenceType>>
  
  Expression.Eq    = <<Expression> == <Expression>> {left}
  Expression.NotEq = <<Expression> != <Expression>> {left}
  
  Expression.And = <<Expression> & <Expression>> {left}
  Expression.Xor = <<Expression> ^ <Expression>> {left}
  Expression.Or  = <<Expression> | <Expression>> {left}
  
  Expression.LazyAnd = <<Expression> && <Expression>> {left}
  Expression.LazyOr  = <<Expression> || <Expression>> {left}
  
  Expression.Cond = <<Expression> ? <Expression> : <Expression>> {right}
  
  
  
  