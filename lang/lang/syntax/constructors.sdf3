module constructors

imports

  lex/literal
  pie
//  statix/API // use for Stx-Scope

// A semantic type (as opposed to the lexical, non-all caps Type)
context-free start-symbols TYPE // For type hint on editor mouseover
context-free sorts TYPE CaptureState TypeParamType
context-free syntax

  TYPE.UnitType = [unit]
  TYPE.BoolType = [bool]
  TYPE.IntType = [int]
  TYPE.StrType = [string]
  TYPE.PathType = [path]
  TYPE.NullType = [null]
  TYPE.TopType = [TOP]
  TYPE.BottomType = [BOTTOM]

  TYPE.NullableType = [[TYPE]?]
  TYPE.ListType = [[TYPE]*]
  TYPE.EmptyListType = [ANY*]
  TYPE.TupleType = [([{TYPE ", "}+])]
  TYPE.SupplierType = [supplier([TYPE])]

  TypeParamType.TypeParamType = [[TYPE] <: [TYPEID] <: [TYPE]]
  TYPE.FuncDefType = <func[<{TypeParamType ", "}*>](<{TYPE ", "}*>) -\> <TYPE>>
  TYPE.FuncRefType = <func[<{TYPE ", "}*>](<{TYPE ", "}*>) -\> <TYPE>>

//  TYPE.DataType = [data: [Stx-Scope]] // doesn't work, defined in Statix and Stratego for now
//  TYPE.TypeParameter2TYPE = TypeParameter

  CaptureState.Free = [free]
  CaptureState.Bound = [bound]
  TYPE.WildcardType = [[TYPE] <: WILDCARD <: [TYPE] (capture state: [CaptureState])]

// Boolean values. Used in Statix logic.
context-free sorts BOOLEAN
context-free syntax

  BOOLEAN.TRUE = [TRUE]
  BOOLEAN.FALSE = [FALSE]

// Import sorts and constructors. Used by Statix to handle imports.
context-free sorts Renaming NormalizedImport
context-free syntax

  Renaming.Renaming = [[{STRING ":"}*] -> [{STRING ":"}*]]
  NormalizedImport.NormalizedImport = [normalized import: [Renaming]]

// The kind of an Assignability check.
// Used by Statix to discern different assignability checks.
context-free sorts AssignableKind
context-free syntax

  AssignableKind.InvariantKind = [assignability check for invariant types]
  AssignableKind.TypeArgKind = [assignability check for type argument types]
  AssignableKind.ExpressionKind = [assignability check for expression types]

// The kind of a Function. Used by code generation.
context-free sorts FuncImplKind BuiltInFunc
context-free syntax

  FuncImplKind.JavaForeignFuncKind = [foreign java func]
  FuncImplKind.JavaForeignConstructorKind = [foreign java constructor]
  FuncImplKind.JavaForeignMethodKind = [foreign java method]
  FuncImplKind.PieForeignFuncKind = [foreign pie func]
  FuncImplKind.PieFuncKind = [pie func]
  FuncImplKind.PieBuiltInFuncKind = [pie built-in func [BuiltInFunc]]

  BuiltInFunc.SupplierGet = [supplier.get]

// The kind of a value. Used by code generation.
context-free sorts ValKind
context-free syntax

  ValKind.LocalValKind = [local val]
  ValKind.InputValKind = [input val]
  ValKind.ContextValKind = [context val]

// The kind of a data type.
context-free sorts TypeKind
context-free syntax

  TypeKind.JavaTypeKind = [java type]

// context values that are saved in the scope graph
context-free sorts CONTEXT
context-free syntax

  CONTEXT.ContextType = [context type: [TYPE]]
  CONTEXT.ContextName = [context name: [STRING]]
  CONTEXT.ContextModule = [context module: { [Module] }]

lexical sorts STRING
lexical syntax STRING = ~[]*
