module func_def

imports

  lex/literal
  type
  common
  func_body

template options

  keyword -/- [a-zA-Z0-9\-\_]

context-free sorts

  FuncHead
  Param
  Params
  FuncDef
  FuncImpl
  PieFuncInjections
  PieKeyFunc

context-free syntax // Function head

  FuncHead.FuncHead = [[FUNCID][TypeParams]([Params]) -> [Type]]

  Param.Param   = <<Type>>
  Param.NParam  = <<ValueId> : <Type>> {prefer} // prefer this over a Param(ImportTy(...))
  Params.Params = <<{Param ", "}*>>

context-free syntax // Function definition

  FuncDef.FuncDef              = <func <FuncHead> = <FuncImpl>>
  FuncImpl.PieForeignFuncImpl  = <foreign <PIEQTYPEID>>
  FuncImpl.JavaForeignFuncImpl = <foreign java <JAVAQTYPEID>#<JAVAFUNCID>>
  FuncImpl.JavaForeignConstructorImpl = <foreign java constructor <JAVAQTYPEID>>
  FuncImpl.PieFuncImpl         = <<PieFuncInjections><PieFuncBody><PieKeyFunc?>>

  PieFuncInjections.NoInjections = []
  PieFuncInjections.Injections = [inject [Params] in ]

  PieKeyFunc.PieKeyFunc = <@ <PieFuncBody>>
